Given an integer array nums and an integer k, return true if there are two distinct indices i and j in the array such that nums[i] == nums[j] and abs(i - j) <= k.

Example 1:
Input: nums = [1,2,3,1], k = 3
Output: true

Example 2:
Input: nums = [1,0,1,1], k = 1
Output: true

Example 3:
Input: nums = [1,2,3,1,2,3], k = 2
Output: false

Constraints:
1 <= nums.length <= 105
-109 <= nums[i] <= 109
0 <= k <= 105

My Approuch:Did it in brute force but did not get the soluion so refered and studied the use of m.count() function 
which return 1 in map if the key exists else false so check for the element and then check for the condition .

bool containsNearbyDuplicate(vector<int>& a, int k) {
        unordered_map<int,int> m;
        for(int i=0;i<a.size();i++){
            if(m.count(a[i])){
                if(abs(i-m[a[i]])<=k){
                    return true;
                }
            }
            m[a[i]]=i;
        }
        return false;
    }
